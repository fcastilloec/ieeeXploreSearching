name: CI
env:
  node-version: 16

on:
  push:
    branches: [ main ]
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Testing
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/cache@v2.1.5
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Get source
      uses: actions/checkout@v2
    - name: Use Node.js ${{ env.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ env.node-version }}
    - name: Install npm dependencies
      run: npm ci
    - name: Linting
      run: npm run lint
    - name: Testing
      run: npm run test

  pack:
    name: Packaging
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: ['ubuntu', 'macos', 'windows']
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Set variables
      id: vars
      run: |
        [[ "${{ matrix.os }}" == "ubuntu" ]] && DIST=linux || DIST=${{ matrix.os }})
        echo "::set-output name=DIST::${DIST}"
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2.1.5
      with:
        path: ${{ steps.vars.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Get source
      uses: actions/checkout@v2
    - name: Use Node.js ${{ env.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ env.node-version }}
    - name: Update npm
      run: npm i -g npm@latest
    - name: Install npm dependencies
      run: npm ci
    - name: Build
      run: |
        npx -y pkg --public -t node${{ env.node-version }}-${{ steps.vars.outputs.DIST }}-x64 src/cli-search.js --output build/ieeeSearch
        npx -y pkg --public -t node${{ env.node-version }}-${{ steps.vars.outputs.DIST }}-x64 src/cli-logic.js --output build/ieeeLogic
        npx -y pkg --public -t node${{ env.node-version }}-${{ steps.vars.outputs.DIST }}-x64 src/cli-count.js --output build/ieeeCount
    - name: Tar files
      working-directory: ./build
      run: |
        [[ "${{ matrix.os }}" == "macos" ]] && TAR=gtar || TAR=tar
        XZ_OPT=-0 ${TAR} -cJvf ../${{ steps.vars.outputs.DIST }}-x64.tar.xz *
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: ${{ steps.vars.outputs.DIST }}-x64.tar.xz

  publish:
    name: Publish to Github Releases
    needs: pack
    runs-on: 'ubuntu-latest'
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: build/
    - name: Move artifacts
      working-directory: build/
      run: find . -type f -exec mv -v '{}' . \;
    - name: Create a release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: build/*.tar.xz
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
